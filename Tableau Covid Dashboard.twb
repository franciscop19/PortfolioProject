<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='View_WorldWideNumbers+ (PortfolioProject)' inline='true' name='federated.16z2f1s16p550j1aoe85f1dq9dhb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-SO2NH0NC\SQLEXPRESS' name='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-SO2NH0NC\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_CasesVsDeaths' table='[dbo].[View_CasesVsDeaths]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_WorldWideNumbers' table='[dbo].[View_WorldWideNumbers]' type='table' />
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_CasesVsDeaths' table='[dbo].[View_CasesVsDeaths]' type='table' />
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_CasesVsPopulation' table='[dbo].[View_CasesVsPopulation]' type='table' />
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_DeathRatePerCountry' table='[dbo].[View_DeathRatePerCountry]' type='table' />
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_DeathsPerContinent' table='[dbo].[View_DeathsPerContinent]' type='table' />
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_InfectionRate' table='[dbo].[View_InfectionRate]' type='table' />
          <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_PercentPopulationVaccinated' table='[dbo].[View_PercentPopulationVaccinated]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[DeathPercentage (View_CasesVsDeaths)]' value='[View_CasesVsDeaths].[DeathPercentage]' />
          <map key='[DeathPercentage]' value='[View_WorldWideNumbers].[DeathPercentage]' />
          <map key='[DeathRate (View_DeathRatePerCountry)]' value='[View_DeathRatePerCountry].[DeathRate]' />
          <map key='[DeathRate]' value='[View_DeathsPerContinent].[DeathRate]' />
          <map key='[HighestInfectionCount]' value='[View_InfectionRate].[HighestInfectionCount]' />
          <map key='[InfectionRate]' value='[View_InfectionRate].[InfectionRate]' />
          <map key='[PopulationPercentage]' value='[View_CasesVsPopulation].[PopulationPercentage]' />
          <map key='[TotalDeathsCount (View_DeathRatePerCountry)]' value='[View_DeathRatePerCountry].[TotalDeathsCount]' />
          <map key='[TotalDeathsCount]' value='[View_DeathsPerContinent].[TotalDeathsCount]' />
          <map key='[Total_cases (View_CasesVsDeaths)]' value='[View_CasesVsDeaths].[Total_cases]' />
          <map key='[Total_cases (View_CasesVsPopulation)]' value='[View_CasesVsPopulation].[Total_cases]' />
          <map key='[Total_cases]' value='[View_WorldWideNumbers].[Total_cases]' />
          <map key='[Total_deaths (View_CasesVsDeaths)]' value='[View_CasesVsDeaths].[Total_deaths]' />
          <map key='[Total_deaths]' value='[View_WorldWideNumbers].[Total_deaths]' />
          <map key='[continent (View_DeathsPerContinent)]' value='[View_DeathsPerContinent].[continent]' />
          <map key='[continent]' value='[View_PercentPopulationVaccinated].[continent]' />
          <map key='[date (View_CasesVsDeaths)]' value='[View_CasesVsDeaths].[date]' />
          <map key='[date (View_CasesVsPopulation)]' value='[View_CasesVsPopulation].[date]' />
          <map key='[date]' value='[View_PercentPopulationVaccinated].[date]' />
          <map key='[location (View_CasesVsDeaths)]' value='[View_CasesVsDeaths].[location]' />
          <map key='[location (View_CasesVsPopulation)]' value='[View_CasesVsPopulation].[location]' />
          <map key='[location (View_DeathRatePerCountry)]' value='[View_DeathRatePerCountry].[location]' />
          <map key='[location (View_InfectionRate)]' value='[View_InfectionRate].[location]' />
          <map key='[location]' value='[View_PercentPopulationVaccinated].[location]' />
          <map key='[new_vaccinations]' value='[View_PercentPopulationVaccinated].[new_vaccinations]' />
          <map key='[population (View_CasesVsPopulation)]' value='[View_CasesVsPopulation].[population]' />
          <map key='[population (View_DeathRatePerCountry)]' value='[View_DeathRatePerCountry].[population]' />
          <map key='[population (View_InfectionRate)]' value='[View_InfectionRate].[population]' />
          <map key='[population]' value='[View_PercentPopulationVaccinated].[population]' />
          <map key='[vaccinated_people]' value='[View_PercentPopulationVaccinated].[vaccinated_people]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_cases]</local-name>
            <parent-name>[View_WorldWideNumbers]</parent-name>
            <remote-alias>Total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total_deaths]</local-name>
            <parent-name>[View_WorldWideNumbers]</parent-name>
            <remote-alias>Total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[View_WorldWideNumbers]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (View_CasesVsDeaths)]</local-name>
            <parent-name>[View_CasesVsDeaths]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (View_CasesVsDeaths)]</local-name>
            <parent-name>[View_CasesVsDeaths]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_cases (View_CasesVsDeaths)]</local-name>
            <parent-name>[View_CasesVsDeaths]</parent-name>
            <remote-alias>Total_cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total_deaths (View_CasesVsDeaths)]</local-name>
            <parent-name>[View_CasesVsDeaths]</parent-name>
            <remote-alias>Total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage (View_CasesVsDeaths)]</local-name>
            <parent-name>[View_CasesVsDeaths]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (View_CasesVsPopulation)]</local-name>
            <parent-name>[View_CasesVsPopulation]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (View_CasesVsPopulation)]</local-name>
            <parent-name>[View_CasesVsPopulation]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_cases (View_CasesVsPopulation)]</local-name>
            <parent-name>[View_CasesVsPopulation]</parent-name>
            <remote-alias>Total_cases</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population (View_CasesVsPopulation)]</local-name>
            <parent-name>[View_CasesVsPopulation]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopulationPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PopulationPercentage]</local-name>
            <parent-name>[View_CasesVsPopulation]</parent-name>
            <remote-alias>PopulationPercentage</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (View_DeathRatePerCountry)]</local-name>
            <parent-name>[View_DeathRatePerCountry]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathsCount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalDeathsCount (View_DeathRatePerCountry)]</local-name>
            <parent-name>[View_DeathRatePerCountry]</parent-name>
            <remote-alias>TotalDeathsCount</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population (View_DeathRatePerCountry)]</local-name>
            <parent-name>[View_DeathRatePerCountry]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathRate (View_DeathRatePerCountry)]</local-name>
            <parent-name>[View_DeathRatePerCountry]</parent-name>
            <remote-alias>DeathRate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent (View_DeathsPerContinent)]</local-name>
            <parent-name>[View_DeathsPerContinent]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathsPerContinent_201B3DDDB24743DCB8DC5037D540A8A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathRate]</local-name>
            <parent-name>[View_DeathsPerContinent]</parent-name>
            <remote-alias>DeathRate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathsPerContinent_201B3DDDB24743DCB8DC5037D540A8A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathsCount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalDeathsCount]</local-name>
            <parent-name>[View_DeathsPerContinent]</parent-name>
            <remote-alias>TotalDeathsCount</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_DeathsPerContinent_201B3DDDB24743DCB8DC5037D540A8A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (View_InfectionRate)]</local-name>
            <parent-name>[View_InfectionRate]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[View_InfectionRate]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population (View_InfectionRate)]</local-name>
            <parent-name>[View_InfectionRate]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InfectionRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InfectionRate]</local-name>
            <parent-name>[View_InfectionRate]</parent-name>
            <remote-alias>InfectionRate</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[View_PercentPopulationVaccinated]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[View_PercentPopulationVaccinated]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[View_PercentPopulationVaccinated]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>33</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[View_PercentPopulationVaccinated]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[View_PercentPopulationVaccinated]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccinated_people</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vaccinated_people]</local-name>
            <parent-name>[View_PercentPopulationVaccinated]</parent-name>
            <remote-alias>vaccinated_people</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='DeathPercentage (View CasesVsDeaths)' datatype='real' name='[DeathPercentage (View_CasesVsDeaths)]' role='measure' type='quantitative' />
      <column caption='Mortality Rate' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='DeathRate (View DeathRatePerCountry)' datatype='real' name='[DeathRate (View_DeathRatePerCountry)]' role='measure' type='quantitative' />
      <column caption='Death Rate' datatype='real' name='[DeathRate]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='real' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' name='[InfectionRate]' role='measure' type='quantitative' />
      <column caption='Population Infection Rate' datatype='real' name='[PopulationPercentage]' role='measure' type='quantitative' />
      <column caption='TotalDeathsCount (View DeathRatePerCountry)' datatype='integer' name='[TotalDeathsCount (View_DeathRatePerCountry)]' role='measure' type='quantitative' />
      <column caption='Total Deaths ' datatype='integer' name='[TotalDeathsCount]' role='measure' type='quantitative' />
      <column caption='Total cases (View CasesVsDeaths)' datatype='real' name='[Total_cases (View_CasesVsDeaths)]' role='measure' type='quantitative' />
      <column caption='Total cases (View CasesVsPopulation)' datatype='real' name='[Total_cases (View_CasesVsPopulation)]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[Total_cases]' role='measure' type='quantitative' />
      <column caption='Total deaths (View CasesVsDeaths)' datatype='integer' name='[Total_deaths (View_CasesVsDeaths)]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_deaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_CasesVsDeaths' datatype='table' name='[__tableau_internal_object_id__].[View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_CasesVsPopulation' datatype='table' name='[__tableau_internal_object_id__].[View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_DeathRatePerCountry' datatype='table' name='[__tableau_internal_object_id__].[View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_DeathsPerContinent' datatype='table' name='[__tableau_internal_object_id__].[View_DeathsPerContinent_201B3DDDB24743DCB8DC5037D540A8A0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_InfectionRate' datatype='table' name='[__tableau_internal_object_id__].[View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_PercentPopulationVaccinated' datatype='table' name='[__tableau_internal_object_id__].[View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='View_WorldWideNumbers' datatype='table' name='[__tableau_internal_object_id__].[View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143]' role='measure' type='quantitative' />
      <column caption='Continent   ' datatype='string' name='[continent (View_DeathsPerContinent)]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='date (View CasesVsDeaths)' datatype='datetime' name='[date (View_CasesVsDeaths)]' role='dimension' type='ordinal' />
      <column caption='Date  ' datatype='datetime' name='[date (View_CasesVsPopulation)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='location (View CasesVsDeaths)' datatype='string' name='[location (View_CasesVsDeaths)]' role='dimension' type='nominal' />
      <column caption='location (View CasesVsPopulation)' datatype='string' name='[location (View_CasesVsPopulation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Location  ' datatype='string' name='[location (View_DeathRatePerCountry)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[location (View_InfectionRate)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='New Vaccinations' datatype='string' name='[new_vaccinations]' role='dimension' type='nominal' />
      <column caption='population (View CasesVsPopulation)' datatype='real' name='[population (View_CasesVsPopulation)]' role='measure' type='quantitative' />
      <column caption='population (View DeathRatePerCountry)' datatype='real' name='[population (View_DeathRatePerCountry)]' role='measure' type='quantitative' />
      <column caption='population (View InfectionRate)' datatype='real' name='[population (View_InfectionRate)]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Vaccinated People' datatype='integer' name='[vaccinated_people]' role='measure' type='quantitative' />
      <column-instance column='[continent (View_DeathsPerContinent)]' derivation='None' name='[none:continent (View_DeathsPerContinent):nk]' pivot='key' type='nominal' />
      <column-instance column='[location (View_CasesVsPopulation)]' derivation='None' name='[none:location (View_CasesVsPopulation):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent (View_DeathsPerContinent):nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location (View_CasesVsPopulation):nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='View_CasesVsDeaths' id='View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_CasesVsDeaths' table='[dbo].[View_CasesVsDeaths]' type='table' />
            </properties>
          </object>
          <object caption='View_CasesVsPopulation' id='View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_CasesVsPopulation' table='[dbo].[View_CasesVsPopulation]' type='table' />
            </properties>
          </object>
          <object caption='View_DeathRatePerCountry' id='View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_DeathRatePerCountry' table='[dbo].[View_DeathRatePerCountry]' type='table' />
            </properties>
          </object>
          <object caption='View_DeathsPerContinent' id='View_DeathsPerContinent_201B3DDDB24743DCB8DC5037D540A8A0'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_DeathsPerContinent' table='[dbo].[View_DeathsPerContinent]' type='table' />
            </properties>
          </object>
          <object caption='View_InfectionRate' id='View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_InfectionRate' table='[dbo].[View_InfectionRate]' type='table' />
            </properties>
          </object>
          <object caption='View_PercentPopulationVaccinated' id='View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_PercentPopulationVaccinated' table='[dbo].[View_PercentPopulationVaccinated]' type='table' />
            </properties>
          </object>
          <object caption='View_WorldWideNumbers' id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143'>
            <properties context=''>
              <relation connection='sqlserver.1943v2q0biw62c1h8vldy0qjnz9z' name='View_WorldWideNumbers' table='[dbo].[View_WorldWideNumbers]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Total_cases]' />
              <expression op='[Total_cases (View_CasesVsDeaths)]' />
            </expression>
            <first-end-point object-id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143' />
            <second-end-point object-id='View_CasesVsDeaths_2B19BE0E6A7C446084EFCE3B216ABCE5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Total_cases]' />
              <expression op='[Total_cases (View_CasesVsPopulation)]' />
            </expression>
            <first-end-point object-id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143' />
            <second-end-point object-id='View_CasesVsPopulation_A9E1705FA8654A57BE8BA14FA96E2112' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Total_deaths]' />
              <expression op='[TotalDeathsCount (View_DeathRatePerCountry)]' />
            </expression>
            <first-end-point object-id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143' />
            <second-end-point object-id='View_DeathRatePerCountry_90E54BEE2BF94C2EAAF78DC7FD0ADDF4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Total_deaths]' />
              <expression op='[TotalDeathsCount]' />
            </expression>
            <first-end-point object-id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143' />
            <second-end-point object-id='View_DeathsPerContinent_201B3DDDB24743DCB8DC5037D540A8A0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Total_cases]' />
              <expression op='[InfectionRate]' />
            </expression>
            <first-end-point object-id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143' />
            <second-end-point object-id='View_InfectionRate_0ABE7A6391C346E0ABCE30EC0DCB5D69' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Total_deaths]' />
              <expression op='[vaccinated_people]' />
            </expression>
            <first-end-point object-id='View_WorldWideNumbers_CC2E637BD617494EABE2F01DD62E0143' />
            <second-end-point object-id='View_PercentPopulationVaccinated_A6A700897AD3472EBB135CEF0EC8A221' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Worldwide Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='View_WorldWideNumbers+ (PortfolioProject)' name='federated.16z2f1s16p550j1aoe85f1dq9dhb' />
          </datasources>
          <datasource-dependencies datasource='federated.16z2f1s16p550j1aoe85f1dq9dhb'>
            <column caption='Mortality Rate' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[Total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[Total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_cases]' derivation='Sum' name='[sum:Total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_deaths]' derivation='Sum' name='[sum:Total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:Total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:Total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:Total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:Total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[:Measure Names]' value='194' />
            <format attr='height' value='39' />
            <format attr='text-format' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:DeathPercentage:qk]' value='n#,##0.00&quot; %&quot;;-#,##0.00&quot; %&quot;' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{CB8FE914-32F3-4E2D-BBF9-112E7CBF527D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='View_WorldWideNumbers+ (PortfolioProject)' name='federated.16z2f1s16p550j1aoe85f1dq9dhb' />
          </datasources>
          <datasource-dependencies datasource='federated.16z2f1s16p550j1aoe85f1dq9dhb'>
            <column caption='Total Deaths ' datatype='integer' name='[TotalDeathsCount]' role='measure' type='quantitative' />
            <column caption='Continent   ' datatype='string' name='[continent (View_DeathsPerContinent)]' role='dimension' type='nominal' />
            <column-instance column='[continent (View_DeathsPerContinent)]' derivation='None' name='[none:continent (View_DeathsPerContinent):nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathsCount]' derivation='Sum' name='[sum:TotalDeathsCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' value='127' />
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='font-weight' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]' value='normal' />
            <format attr='font-weight' data-class='subtotal' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]' value='normal' />
            <format attr='font-weight' data-class='total' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]' value='normal' />
            <format attr='font-weight' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' value='normal' />
            <format attr='font-style' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' value='normal' />
            <format attr='color' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' value='Continent'>
              <formatted-text>
                <run>Continent</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-style' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]' value='normal' />
            <format attr='font-weight' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-style' value='normal' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:TotalDeathsCount:qk]</rows>
        <cols>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]</cols>
      </table>
      <simple-id uuid='{A2FEBC2F-F0D4-4D37-ADD2-E77ACD31E66C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infection Rate Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='View_WorldWideNumbers+ (PortfolioProject)' name='federated.16z2f1s16p550j1aoe85f1dq9dhb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16z2f1s16p550j1aoe85f1dq9dhb'>
            <column caption='Infection Rate' datatype='real' name='[InfectionRate]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[location (View_InfectionRate)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location (View_InfectionRate)]' derivation='None' name='[none:location (View_InfectionRate):nk]' pivot='key' type='nominal' />
            <column-instance column='[InfectionRate]' derivation='Sum' name='[sum:InfectionRate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Latitude (generated)]</column>
            <column>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Longitude (generated)]' field-type='quantitative' max='21256216.768825263' min='-18263114.838098336' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Latitude (generated)]' field-type='quantitative' max='13123092.350443844' min='-7312456.7399293287' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:InfectionRate:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_InfectionRate):nk]' value='false' />
            <format attr='break-on-special' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_InfectionRate):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_InfectionRate):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:InfectionRate:qk]' value='Infection Rate'>
              <formatted-text>
                <run>Infection Rate</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_InfectionRate):nk]' />
              <color column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:InfectionRate:qk]' />
              <geometry column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Latitude (generated)]</rows>
        <cols>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{949F4CE4-70CB-4241-A4F1-35395564157D}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Population Infection Rate by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='View_WorldWideNumbers+ (PortfolioProject)' name='federated.16z2f1s16p550j1aoe85f1dq9dhb' />
          </datasources>
          <datasource-dependencies datasource='federated.16z2f1s16p550j1aoe85f1dq9dhb'>
            <column caption='Population Infection Rate' datatype='real' name='[PopulationPercentage]' role='measure' type='quantitative' />
            <column-instance column='[PopulationPercentage]' derivation='Avg' name='[avg:PopulationPercentage:qk]' pivot='key' type='quantitative' />
            <column caption='Date  ' datatype='datetime' name='[date (View_CasesVsPopulation)]' role='dimension' type='ordinal' />
            <column caption='location (View CasesVsPopulation)' datatype='string' name='[location (View_CasesVsPopulation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location (View_CasesVsPopulation)]' derivation='None' name='[none:location (View_CasesVsPopulation):nk]' pivot='key' type='nominal' />
            <column-instance column='[date (View_CasesVsPopulation)]' derivation='Month-Trunc' name='[tmn:date (View_CasesVsPopulation):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[avg:PopulationPercentage:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:location (View_CasesVsPopulation):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]</column>
            <column>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[avg:PopulationPercentage:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[tmn:date (View_CasesVsPopulation):qk]' field-type='quantitative' max='#2022-05-12 21:54:28.891#' min='#2019-11-20 02:05:31.108#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[avg:PopulationPercentage:qk]' field-type='quantitative' max='26.988294018899097' min='-1.484546420669334' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[tmn:date (View_CasesVsPopulation):qk]' scope='cols' value='Date ' />
            <format attr='title' class='0' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[avg:PopulationPercentage:qk]' scope='rows' value='Avg Population Infection Rate' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' value='Location&#10;'>
              <formatted-text>
                <run>Location&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' value='Location'>
              <formatted-text>
                <run>Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' />
              <text column='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[avg:PopulationPercentage:qk]</rows>
        <cols>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[tmn:date (View_CasesVsPopulation):qk]</cols>
      </table>
      <simple-id uuid='{F5091B80-CB30-421A-983F-D801082E8838}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='View_WorldWideNumbers+ (PortfolioProject)' name='federated.16z2f1s16p550j1aoe85f1dq9dhb' />
      </datasources>
      <datasource-dependencies datasource='federated.16z2f1s16p550j1aoe85f1dq9dhb'>
        <column caption='location (View CasesVsPopulation)' datatype='string' name='[location (View_CasesVsPopulation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location (View_CasesVsPopulation)]' derivation='None' name='[none:location (View_CasesVsPopulation):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='17' param='horz' type-v2='layout-flow' w='99004' x='498' y='993'>
            <zone h='98014' id='15' type-v2='layout-basic' w='89048' x='498' y='993'>
              <zone h='42207' id='8' param='horz' type-v2='layout-flow' w='89048' x='498' y='56800'>
                <zone h='42207' id='6' type-v2='layout-basic' w='89048' x='498' y='56800'>
                  <zone h='42207' id='12' name='Sheet 4' w='89048' x='498' y='56800'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='15848' id='3' name='Sheet 1' w='37799' x='498' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55807' id='10' name='Sheet 3' w='51249' x='38297' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39959' id='5' name='Sheet 2' w='37799' x='498' y='16841'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98014' id='16' is-fixed='true' param='vert' type-v2='layout-flow' w='9956' x='89546' y='993'>
              <zone h='98014' id='18' name='Sheet 4' param='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' type-v2='filter' values='relevant' w='9956' x='89546' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='27' param='vert' type-v2='layout-flow' w='99004' x='498' y='993'>
                <zone fixed-size='119' h='15848' id='3' is-fixed='true' name='Sheet 1' w='37799' x='498' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55807' id='10' is-fixed='true' name='Sheet 3' w='51249' x='38297' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39959' id='5' is-fixed='true' name='Sheet 2' w='37799' x='498' y='16841'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98014' id='18' mode='checkdropdown' name='Sheet 4' param='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' type-v2='filter' values='relevant' w='9956' x='89546' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42207' id='12' is-fixed='true' name='Sheet 4' w='89048' x='498' y='56800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{021B865B-896E-4422-B93B-91DEF8C06447}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD3215A5-F4FE-4B94-BC4B-F3683B35DED8}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:continent (View_DeathsPerContinent):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF889F30-3D58-4ECB-BA62-0E8B03E1D6C2}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='104'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[sum:InfectionRate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_InfectionRate):nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{78C1E856-95E0-4671-93D3-FEF39190FC4E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[attr:location (View_CasesVsPopulation):nk]</field>
            <field>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[none:location (View_CasesVsPopulation):nk]</field>
            <field>[federated.16z2f1s16p550j1aoe85f1dq9dhb].[yr:date (View_CasesVsPopulation):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10632E17-294B-4E5B-9FA8-1486C5A7BA8B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{634454D9-F34A-46BF-AE1F-7F1D8FFC785E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      gIECAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
